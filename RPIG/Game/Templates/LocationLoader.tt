<#@ template hostspecific="true" language="C#"#>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using RPIG.Engine;
using System.Collections.Generic;

namespace RPIG
{
	public static partial class LocationLoader
	{
		public static Dictionary<App.LocationName, GameLocation> Load() 
		{
			return new Dictionary<App.LocationName, GameLocation>()
			{
<#
string solutionPath = this.Host.ResolveAssemblyReference("$(ProjectDir)");
var locationsName = new List<string>();

foreach (var directory in Directory.GetDirectories($@"{solutionPath}/Game/Locations/"))
{
	var directoryInfo = new DirectoryInfo(directory);
	locationsName.Add(directoryInfo.Name);
	var files = directoryInfo.GetFiles();

	var htmlFile = files.First(f => f.Extension == ".html");
	var cssFile = files.First(f => f.Extension == ".css");

	var htmlText = File.ReadAllText(htmlFile.FullName);
	var cssText = File.ReadAllText(cssFile.FullName);
#>
			[App.LocationName.<#=directoryInfo.Name #>] = new GameLocation (
				@"<#= htmlText #>",
				@"<#= cssText  #>"),
<#
}
#>
			};
		}
	}

	public static partial class App
	{
		public enum LocationName
		{
<#
foreach (var name in locationsName)
{
#>
			<#= name #>,
<#}#>
		}
	}
}