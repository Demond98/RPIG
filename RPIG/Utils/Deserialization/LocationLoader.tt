<#@ template debug="false" hostspecific="true" language="C#"#>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ assembly name="EnvDTE" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Threading.Tasks" #>
<#@ output extension=".cs" #>
<#
string solutionPath = ((this.Host as IServiceProvider).GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE).Solution.FullName; 
var locationsDictionary = new Dictionary<string, GameLocationData>();
foreach (var directory in Directory.GetDirectories($@"{solutionPath}/../RPIG/Assets/Locations/"))
{
	var directoryInfo = new DirectoryInfo(directory);
	var files = directoryInfo.GetFiles();

	var htmlFile = files.First(f => f.Extension == ".html");
	var cssFile = files.First(f => f.Extension == ".css");

	var htmlText = File.ReadAllText(htmlFile.FullName);
	var cssText = File.ReadAllText(cssFile.FullName);

	locationsDictionary.Add(directoryInfo.Name, new GameLocationData(htmlText, cssText));
}


#>
using RPIG.Engine;
using RPIG.States;
using System.Collections.Generic;

public static partial class LocationLoader
{
	public static Dictionary<string, GameLocation> Load() 
	{
		var locations = new Dictionary<string, GameLocation>();

		<# foreach(var locationData in locationsDictionary)
		{#>
locations.Add(
			"<#=locationData.Key #>",
			new GameLocation (
				@"<#=locationData.Value.HtmlText#>",
				@"<#=locationData.Value.CssText#>")
			);
		<#}#>

		return locations;
	}
}

<#+
public class GameLocationData
{
	public string HtmlText { get; set; }
	public string CssText { get; set; }

	public GameLocationData(string htmlText, string cssText)
	{
		HtmlText = htmlText;
		CssText = cssText;
	}
}
#>