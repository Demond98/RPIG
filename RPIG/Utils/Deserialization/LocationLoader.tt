<#@ template debug="true" hostspecific="true" language="C#"#>
<#@ assembly name="System.Runtime" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ assembly name="EnvDTE" #>

<#@ import namespace="System.Reflection" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

//<#= ((this.Host as IServiceProvider).GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE).Solution.FullName #>
<#string solutionPath = ((this.Host as IServiceProvider).GetService(typeof(EnvDTE.DTE)) as EnvDTE.DTE).Solution.FullName; #>

using RPIG.Engine;
using System.Collections.Generic;

public static partial class LocationLoader
{
	public static Dictionary<string, GameLocation> Load() 
	{
		var locations = new Dictionary<string, GameLocation>();
		<# for (int i = 0; i < new DataDeserializer().DeserializeGameLocations().Count ; i++)
		{#>
			locations.Add("<#=i#>", new GameLocation("", null));
		<#}#>

		return locations;
	}
}

<#+
public class GameLocationData
{
	public string HtmlText { get; set; }
	public string CssText { get; set; }
	public List<string> ButtonFunctions { get; }
	[JsonConstructor]
	public GameLocationData(string htmlText, string cssText, List<string> buttonFunctions)
	{
		HtmlText = htmlText;
		CssText = cssText;
		ButtonFunctions = buttonFunctions;
	}
}

public class DataDeserializer
{
	public List<GameLocationData> DeserializeGameLocations()
	{
		var locationsList = new List<GameLocationData>();
		foreach (var directory in Directory.GetDirectories($@"{solutionPath}/../RPIG/Assets/Locations/"))
		{
			var files = new DirectoryInfo(directory).GetFiles();

			var jsonFile = files.FirstOrDefault(f => f.Extension == ".json")
				?? throw new Exception("Не найден файл по расширению - json");

			var jsonText = File.ReadAllText(jsonFile.FullName);
			var locationData = JsonConvert.DeserializeObject<GameLocationData>(jsonText);

			var htmlFile = files.FirstOrDefault(f => f.Name == locationData.HtmlText)
				?? throw new Exception($"Не найден файл по расширению - {locationData.HtmlText}");

			var cssFile = files.FirstOrDefault(f => f.Name == locationData.CssText)
				?? throw new Exception($"Не найден файл по расширению - {locationData.CssText}");

			locationData.HtmlText = File.ReadAllText(htmlFile.FullName);
			locationData.CssText = File.ReadAllText(cssFile.FullName);

			locationsList.Add(locationData);
		}

		return locationsList;
	}
}
#>